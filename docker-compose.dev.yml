version: "3.7"

networks:
        rasa:
                name: rasa

volumes:
        db:
        models:

x-database-credentials: &database-credentials
  DB_HOST: "${DB_HOST}"
  DB_PORT: "5432"
  DB_USER: "${DB_USER:-admin}"
  DB_PASSWORD: "${DB_PASSWORD}"
  DB_LOGIN_DB: "${DB_LOGIN_DB:-rasa}"

x-rabbitmq-credentials: &rabbitmq-credentials
  RABBITMQ_HOST: "rabbit"
  RABBITMQ_USERNAME: "user"
  RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}

x-redis-credentials: &redis-credentials
  REDIS_HOST: "redis"
  REDIS_PORT: "6379"
  REDIS_PASSWORD: ${REDIS_PASSWORD}
  REDIS_DB: "1"

x-rasax-credentials: &rasax-credentials
  LOCAL_MODE: "false"
  RASA_X_HOST: "http://rasa-x:5002"
  RASA_X_TOKEN: ${RASA_X_TOKEN}
  JWT_SECRET: ${JWT_SECRET}
  RASA_USER_APP: "http://app:5055"
  RASA_WORKER_HOST: "http://rasa-worker:5005"
  RASA_TOKEN: ${RASA_TOKEN}
  RASA_WORKER_TOKEN: ${RASA_TOKEN}

x-rasa-credentials: &rasa-credentials
  <<: *rabbitmq-credentials
  <<: *rasax-credentials
  <<: *database-credentials
  <<: *redis-credentials
  RASA_TOKEN: ${RASA_TOKEN}
  RASA_MODEL_PULL_INTERVAL: 10

x-rasa-services: &default-rasa-service
  restart: always
  image: "rasa/rasa:${RASA_VERSION}-full"
  volumes:
  - ./credentials.yml:/app/credentials.yml
  - ./endpoints.yml:/app/endpoints.yml
  - models:/app/models
  - ./data:/app/data
  - ./test_end_to_end:/app/test_end_to_end
  - ./test_NLU:/app/test_NLU
  - ./config.yml:/app/config.yml
  - ./domain.yml:/app/domain.yml
  expose:
          - "5005"
  command: >
    x
    --no-prompt
    --production
    --port 5005
    --enable-api
    --jwt-method HS256
    --jwt-secret ${JWT_SECRET}
    --auth-token '${RASA_TOKEN}'
    --cors "*"
  depends_on:
  - rasa-x
  - rabbit
  - redis

services:
  rasa-x:
    restart: always
    image: "rasa/rasa-x:${RASA_X_VERSION}"
    networks:
            - rasa
    expose:
      - "5002"
    volumes:
      - models:/app/models
      - ./environments.yml:/app/environments.yml
      - ./logs:/logs
      - ./auth:/app/auth
      - ./data:/app/data
      - ./config.yml:/app/config.yml
    environment:
      <<: *database-credentials
      <<: *rasa-credentials
      SELF_PORT: "5002"
      DB_DATABASE: "${DB_DATABASE:-rasa}"
      RASA_MODEL_DIR: "/app/models"
      RABBITMQ_QUEUE: "rasa_production_events"
      PASSWORD_SALT: ${PASSWORD_SALT}
      RASA_X_USER_ANALYTICS: "0"
      SANIC_RESPONSE_TIMEOUT: "3600"
#   depends_on:
#     - db

  rasa-production:
    <<: *default-rasa-service
    networks:
            - rasa
    ports:
            - "5005:5005"
    environment:
      <<: *rasa-credentials
      DB_DATABASE: "tracker"
      RABBITMQ_QUEUE: "rasa_production_events"
      RASA_MODEL_SERVER: "http://rasa-x:5002/api/projects/default/models/tags/production"

  rasa-worker:
    <<: *default-rasa-service
    networks:
            - rasa
    environment:
      <<: *rasa-credentials
      DB_DATABASE: "worker_tracker"
      RABBITMQ_QUEUE: "rasa_worker_events"
      RASA_MODEL_SERVER: "http://rasa-x:5002/api/projects/default/models/tags/production"

  app:
    restart: always
    image: "rasa/rasa-x-demo:${RASA_X_DEMO_VERSION}"
    networks:
            - rasa
    expose:
      - "5055"
    depends_on:
      - rasa-production

  db:
    restart: always
    image: "bitnami/postgresql:11.2.0"
    networks:
            - rasa
    expose:
      - "5432"
    environment:
      POSTGRESQL_USERNAME: "${DB_USER:-admin}"
      POSTGRESQL_PASSWORD: "${DB_PASSWORD}"
      POSTGRESQL_DATABASE: "${DB_DATABASE:-rasa}"
    volumes:
      - db:/bitnami/postgresql

  rabbit:
    restart: always
    image: "bitnami/rabbitmq:3.7.17"
    networks:
            - rasa
    environment:
      RABBITMQ_HOST: "rabbit"
      RABBITMQ_USERNAME: "user"
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_DISK_FREE_LIMIT: "{mem_relative, 0.1}"
    expose:
      - "5672"

  nginx:
    restart: always
    image: "rasa/nginx:${RASA_X_VERSION}"
    networks:
            - rasa
    ports:
        - "80:8080"
        - "443:8443"
    volumes:
      - ./terms:/opt/bitnami/nginx/conf/bitnami/terms
    depends_on:
      - rasa-x
      - rasa-production
      - app

  redis:
    restart: always
    image: "bitnami/redis:5.0.5"
    networks:
            - rasa
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}

